# editorconfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

# CA Rules

# IDE0001	Simplify name

# IDE0002	Simplify member access

# IDE0003	Remove this or Me qualification
# IDE0009	Add this or Me qualification
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# IDE0004	Remove unnecessary cast

# IDE0005	Remove unnecessary import

# IDE0007	Use var instead of explicit type
# IDE0008	Use explicit type instead of var
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning
csharp_style_var_elsewhere = false:warning

# IDE0010	Add missing cases to switch statement

# IDE0011	Add braces
csharp_prefer_braces = true:warning

# IDE0016	Use throw expression
csharp_style_throw_expression = true:warning

# IDE0017	Use object initializers
dotnet_style_object_initializer = true:warning

# IDE0018	Inline variable declaration
csharp_style_inlined_variable_declaration = true:warning

# IDE0019	Use pattern matching to avoid as followed by a null check
csharp_style_pattern_matching_over_as_with_null_check = true:warning

# IDE0020	Use pattern matching to avoid is check followed by a cast (with variable)
# IDE0038	Use pattern matching to avoid is check followed by a cast (without variable)
csharp_style_pattern_matching_over_is_with_cast_check = true:warning

# IDE0021	Use expression body for constructors
csharp_style_expression_bodied_constructors = true:warning

# IDE0022	Use expression body for methods
csharp_style_expression_bodied_methods = true:warning

# IDE0023	Use expression body for conversion operators
# IDE0024	Use expression body for operators
csharp_style_expression_bodied_operators = true:warning

# IDE0025	Use expression body for properties
csharp_style_expression_bodied_properties = true:warning

# IDE0026	Use expression body for indexers
csharp_style_expression_bodied_indexers = true:warning

# IDE0027	Use expression body for accessors
csharp_style_expression_bodied_accessors = true:warning

# IDE0028	Use collection initializers
dotnet_style_collection_initializer = true:warning

# IDE0029	Null check can be simplified
dotnet_style_coalesce_expression = true:warning

# IDE0030	Null check can be simplified
dotnet_style_coalesce_expression = true:warning

# IDE0031	Use null propagation
dotnet_style_null_propagation = true:warning

# IDE0032	Use auto property
dotnet_style_prefer_auto_properties = true:warning

# IDE0033	Use explicitly provided tuple name
dotnet_style_explicit_tuple_names = true:warning

# IDE0034	Simplify default expression
csharp_prefer_simple_default_expression = true:warning

# IDE0035	Remove unreachable code

# IDE0036	Order modifiers
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
# visual_basic_preferred_modifier_order

# IDE0037	Use inferred member name
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning

# IDE0038 => IDE0020

# IDE0039	Use local function instead of lambda
csharp_style_prefer_local_over_anonymous_function = true:warning

# IDE0040	Add accessibility modifiers
dotnet_style_require_accessibility_modifiers = always:warning

# IDE0041	Use is null check
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# IDE0042	Deconstruct variable declaration
csharp_style_deconstructed_variable_declaration = true:warning

# IDE0044	Add readonly modifier
dotnet_style_readonly_field = true:warning

# IDE0045	Use conditional expression for assignment
dotnet_style_prefer_conditional_expression_over_assignment = true:warning

# IDE0046	Use conditional expression for return
dotnet_style_prefer_conditional_expression_over_return = true:warning

# IDE0047	Remove unnecessary parentheses
# IDE0048	Add parentheses for clarity
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = always_for_clarity:warning

# IDE0049	Use language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# IDE0050	Convert anonymous type to tuple

# IDE0051	Remove unused private member

# IDE0052	Remove unread private member

# IDE0053	Use expression body for lambdas
csharp_style_expression_bodied_lambdas = true:warning

# IDE0054	Use compound assignment
dotnet_style_prefer_compound_assignment = true:warning

# IDE0055	Fix formatting	(Too many to list here. See .NET formatting options and C# formatting options.)

# IDE0056	Use index operator
csharp_style_prefer_index_operator = true:warning

# IDE0057	Use range operator
csharp_style_prefer_range_operator = true:warning

# IDE0058	Remove unused expression value
csharp_style_unused_value_expression_statement_preference = unused_local_variable:warning
# visual_basic_style_unused_value_expression_statement_preference

# IDE0059	Remove unnecessary value assignment
csharp_style_unused_value_assignment_preference = unused_local_variable:warning
# visual_basic_style_unused_value_assignment_preference

# Generated code
[*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs}]
generated_code = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
end_of_line = crlf

dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_return = true:warning

# C# files
[*.cs]
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_switch_labels = true
csharp_indent_labels = one_less_than_current

# name all constant fields using PascalCase
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols  = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds   = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# static fields should have s_ prefix
dotnet_naming_rule.static_fields_should_have_prefix.severity = suggestion
dotnet_naming_rule.static_fields_should_have_prefix.symbols  = static_fields
dotnet_naming_rule.static_fields_should_have_prefix.style = static_prefix_style
dotnet_naming_symbols.static_fields.applicable_kinds   = field
dotnet_naming_symbols.static_fields.required_modifiers = static
dotnet_naming_symbols.static_fields.applicable_accessibilities = private, internal, private_protected
dotnet_naming_style.static_prefix_style.required_prefix = s_
dotnet_naming_style.static_prefix_style.capitalization = camel_case

# internal and private fields should be _camelCase
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols  = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_underscore_style
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_style.camel_case_underscore_style.required_prefix = _
dotnet_naming_style.camel_case_underscore_style.capitalization = camel_case

# Code style defaults
csharp_using_directive_placement = outside_namespace:suggestion
dotnet_sort_system_directives_first = true
csharp_preserve_single_line_blocks = true:none
csharp_preserve_single_line_statements = false:none
csharp_prefer_static_local_function = true:suggestion
csharp_prefer_simple_using_statement = false:none
csharp_style_prefer_switch_expression = true:suggestion

# Expression-bodied members
csharp_style_expression_bodied_local_functions = true:suggestion

# Null checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Other features
csharp_style_pattern_local_over_anonymous_function = false:none

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# License header
file_header_template = 'Elite - The Sharp Kind' - Andy Hawkins 2023.\n'Elite - The New Kind' - C.J.Pinder 1999-2001.\nElite (C) I.Bell & D.Braben 1984.
csharp_style_namespace_declarations = block_scoped:suggestion
csharp_style_prefer_method_group_conversion = true:suggestion
csharp_style_prefer_top_level_statements = true:suggestion

# Diagnostic
dotnet_analyzer_diagnostic.severity = warning

# IDE - Exclusions
dotnet_diagnostic.IDE0010.severity = none # Add missing cases to switch statement
dotnet_diagnostic.IDE0058.severity = none # Remove unnecessary expression value
dotnet_diagnostic.IDE0072.severity = none # Add missing cases to switch expression

# CodeAnalysis - Exclusions
dotnet_diagnostic.CA1814.severity = none # Prefer jagged arrays over multidimensional

# StyleCop - Exclusions
dotnet_diagnostic.SA0001.severity = none # SA0001XmlCommentAnalysisDisabled
dotnet_diagnostic.SA1005.severity = none # SA1005SingleLineCommentsMustBeginWithSingleSpace
dotnet_diagnostic.SA1101.severity = none # SA1101PrefixLocalCallsWithThis
dotnet_diagnostic.SA1308.severity = none # SA1308VariableNamesMustNotBePrefixed
dotnet_diagnostic.SA1309.severity = none # SA1309FieldNamesMustNotBeginWithUnderscore
dotnet_diagnostic.SA1311.severity = none # SA1311StaticReadonlyFieldsMustBeginWithUpperCaseLetter
dotnet_diagnostic.SA1407.severity = none # SA1407ArithmeticExpressionsMustDeclarePrecedence
dotnet_diagnostic.SA1600.severity = none # SA1600ElementsMustBeDocumented
dotnet_diagnostic.SA1601.severity = none # SA1601PartialElementsMustBeDocumented
dotnet_diagnostic.SA1602.severity = none # SA1602EnumerationItemsMustBeDocumented
dotnet_diagnostic.SA1611.severity = none # SA1611ElementParametersMustBeDocumented
dotnet_diagnostic.SA1614.severity = none # SA1614ElementParameterDocumentationMustHaveText
dotnet_diagnostic.SA1615.severity = none # SA1615ElementReturnValueMustBeDocumented
dotnet_diagnostic.SA1616.severity = none # SA1616ElementReturnValueDocumentationMustHaveText
dotnet_diagnostic.SA1633.severity = none # SA1633FileMustHaveHeader

# Roslynator
# Set severity for all analyzers that are enabled by default (https://docs.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2022#set-rule-severity-of-multiple-analyzer-rules-at-once-in-an-editorconfig-file)
dotnet_analyzer_diagnostic.category-roslynator.severity = warning
roslynator_refactorings.enabled = true
roslynator_compiler_diagnostic_fixes.enabled = true

# Roslynator - Exclusions
dotnet_diagnostic.RCS1069.severity = silent # Remove unnecessary case label
dotnet_diagnostic.RCS1070.severity = silent # Remove redundant default switch section
dotnet_diagnostic.RCS1141.severity = silent # Add 'param' element to documentation comment
dotnet_diagnostic.RCS1154.severity = silent # Sort enum members
dotnet_diagnostic.RCS1181.severity = silent # Convert comment to documentation comment
dotnet_diagnostic.RCS1237.severity = silent # ([deprecated] use RCS1254 instead) Use bit shift operator
dotnet_diagnostic.RCS1238.severity = silent # Avoid nested ?: operators

# C++ Files
[*.{cpp,h,in}]
curly_bracket_next_line = true
indent_brace_style = Allman

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,nativeproj,locproj}]
indent_size = 2

[*.{csproj,vbproj,proj,nativeproj,locproj}]
charset = utf-8

# Xml build files
[*.builds]
indent_size = 2

# Xml files
[*.{xml,stylecop,resx,ruleset}]
indent_size = 2

# Xml config files
[*.{props,targets,config,nuspec}]
indent_size = 2

# YAML config files
[*.{yml,yaml}]
indent_size = 2

# Shell scripts
[*.sh]
end_of_line = lf
[*.{cmd,bat}]
end_of_line = crlf
